{"ast":null,"code":"var _jsxFileName = \"/Users/garysu/Github/Gym-Restaurant-Online-Ordering/src/components/PaymentForm.jsx\",\n  _s = $RefreshSig$();\nimport { CardElement, useElements, useStripe, Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearCart, cartProducts } from \"../stores/cart/cartSlice\";\nimport { getAddress, clearAddress } from \"../stores/userInfo/addressSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport Button from \"./elements/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\nexport const StripeWrapper = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = StripeWrapper;\nconst PaymentForm = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const cart = useSelector(cartProducts);\n  const address = useSelector(getAddress);\n  const navigate = useNavigate();\n  const elements = useElements();\n  const stripe = useStripe();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements || !(cart !== null && cart !== void 0 && cart.length)) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        error: backeEndError,\n        clientSecret\n      } = await fetch('http://localhost:8080/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          paymentMethodType: 'card',\n          orderItems: cart,\n          userId: '',\n          shippingAddress: address\n        })\n      }).then(r => r.json());\n      const {\n        error: stripeError,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (backeEndError || stripeError) {\n        setError(backeEndError || stripeError);\n      } else if (paymentIntent.status === 'succeeded') {\n        dispatch(clearAddress());\n        dispatch(clearCart());\n        navigate('/payment-success');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"md:-2/3 md:mx-auto px-2 pt-1\",\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"card-element\",\n      className: \"pt-4 text-2xl md:text-center\",\n      children: \"Please enter your card details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: /*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center p-2\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disbled: loading,\n        children: loading ? 'Loading...' : 'Pay Now'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentForm, \"EHggIF5o2YoynycU3i5m9oBwldw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useNavigate, useElements, useStripe];\n});\n_c2 = PaymentForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"StripeWrapper\");\n$RefreshReg$(_c2, \"PaymentForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","Elements","loadStripe","useSelector","useDispatch","clearCart","cartProducts","getAddress","clearAddress","useNavigate","useState","useEffect","Button","jsxDEV","_jsxDEV","stripePromise","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","StripeWrapper","stripe","children","PaymentForm","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","loading","setLoading","error","setError","dispatch","cart","address","navigate","elements","handleSubmit","e","preventDefault","length","backeEndError","clientSecret","fetch","method","headers","body","JSON","stringify","paymentMethodType","orderItems","userId","shippingAddress","then","r","json","stripeError","paymentIntent","confirmCardPayment","payment_method","card","getElement","status","err","console","log","className","id","onSubmit","htmlFor","type","disbled","_c2","$RefreshReg$"],"sources":["/Users/garysu/Github/Gym-Restaurant-Online-Ordering/src/components/PaymentForm.jsx"],"sourcesContent":["import { CardElement, useElements, useStripe, Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearCart, cartProducts } from \"../stores/cart/cartSlice\";\nimport { getAddress, clearAddress } from \"../stores/userInfo/addressSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport Button from \"./elements/Button\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\n\nexport const StripeWrapper = () => {\n    return (\n        <Elements stripe={stripePromise}>\n            <PaymentForm />\n        </Elements>\n    )\n}\nconst PaymentForm = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const cart = useSelector(cartProducts);\n    const address = useSelector(getAddress);\n    const navigate = useNavigate();\n    const elements = useElements();\n    const stripe = useStripe();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!stripe || !elements || !cart?.length ) {\n            return;\n        }\n\n        setLoading(true);\n        try {\n            const { error: backeEndError, clientSecret } = await fetch('http://localhost:8080/create-payment-intent', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    paymentMethodType: 'card',\n                    orderItems: cart,\n                    userId: '',\n                    shippingAddress: address\n                })\n            }).then(r => r.json());\n\n            const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(\n                clientSecret, {\n                    payment_method: {\n                        card: elements.getElement(CardElement)\n                    }\n                }\n            )\n            if (backeEndError || stripeError) {\n                setError(backeEndError || stripeError)\n            } else if (paymentIntent.status === 'succeeded') {\n                dispatch(clearAddress());\n                dispatch(clearCart());\n                navigate('/payment-success');\n            }\n\n        } catch(err) {\n            console.log(err);\n        }\n\n        setLoading(false);\n    }\n\n    return (\n        <form className=\"md:-2/3 md:mx-auto px-2 pt-1\" id=\"payment-form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"card-element\" className=\"pt-4 text-2xl md:text-center\">Please enter your card details</label>\n            <div className=\"my-4\">\n                <CardElement id=\"card-element\" />\n            </div>\n            <div className=\"flex justify-center p-2\">\n                <Button type=\"submit\" disbled={loading}>\n                    {\n                        loading ?\n                        'Loading...' :\n                        'Pay Now'\n                    }\n                </Button>\n            </div>\n        </form>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}